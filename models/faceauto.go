package models

import (
	"encoding/json"
	"io/ioutil"
	"log"
	"net/http"
	"net/url"
	"strconv"
	"wefacer/convert"
	"wefacer/core"
)

type DefaultFaceAuto struct {
	FaceCount int
	Face      []Face
}
type Face struct {
	Age        int
	Race       string
	Gender     string
	Expression int
	Glasses    int
}
type BaiduAutoGenerated struct {
	ResultNum int `json:"result_num"`
	Result    []struct {
		Location struct {
			Left   int `json:"left"`
			Top    int `json:"top"`
			Width  int `json:"width"`
			Height int `json:"height"`
		} `json:"location"`
		FaceProbability float64 `json:"face_probability"`
		RotationAngle   int     `json:"rotation_angle"`
		Yaw             float64 `json:"yaw"`
		Pitch           float64 `json:"pitch"`
		Roll            float64 `json:"roll"`
		Age             float64 `json:"age"`
		Beauty          float64 `json:"beauty"`
		Landmark        []struct {
			X int `json:"x"`
			Y int `json:"y"`
		} `json:"landmark"`
		Landmark72 []struct {
			X int `json:"x"`
			Y int `json:"y"`
		} `json:"landmark72"`
		Gender             string  `json:"gender"`
		Expression         int     `json:"expression"`
		GenderProbability  float64 `json:"gender_probability"`
		Glasses            int     `json:"glasses"`
		GlassesProbability float64 `json:"glasses_probability"`
		Race               string  `json:"race"`
		RaceProbability    float64 `json:"race_probability"`
		Qualities          struct {
			Occlusion struct {
				LeftEye    float64 `json:"left_eye"`
				RightEye   float64 `json:"right_eye"`
				Nose       float64 `json:"nose"`
				Mouth      float64 `json:"mouth"`
				LeftCheek  float64 `json:"left_cheek"`
				RightCheek float64 `json:"right_cheek"`
				Chin       float64 `json:"chin"`
			} `json:"occlusion"`
			Blur         float64 `json:"blur"`
			Illumination int     `json:"illumination"`
			Completeness int     `json:"completeness"`
			Type         struct {
				Human   float64 `json:"human"`
				Cartoon float64 `json:"cartoon"`
			} `json:"type"`
		} `json:"qualities"`
	} `json:"result"`
	LogID int64 `json:"log_id"`
}

type FaceAddAutoGenerated struct {
	ImageID   string `json:"image_id"`
	RequestID string `json:"request_id"`
	TimeUsed  int    `json:"time_used"`
	Faces     []struct {
		Landmark struct {
			MouthUpperLipLeftContour2 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_upper_lip_left_contour2"`
			MouthUpperLipTop struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_upper_lip_top"`
			MouthUpperLipLeftContour1 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_upper_lip_left_contour1"`
			LeftEyeUpperLeftQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_upper_left_quarter"`
			LeftEyebrowLowerMiddle struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eyebrow_lower_middle"`
			MouthUpperLipLeftContour3 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_upper_lip_left_contour3"`
			LeftEyebrowLowerLeftQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eyebrow_lower_left_quarter"`
			RightEyebrowLowerLeftQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eyebrow_lower_left_quarter"`
			RightEyePupil struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_pupil"`
			MouthLowerLipRightContour1 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_lower_lip_right_contour1"`
			MouthLowerLipLeftContour2 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_lower_lip_left_contour2"`
			MouthLowerLipRightContour3 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_lower_lip_right_contour3"`
			MouthLowerLipRightContour2 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_lower_lip_right_contour2"`
			ContourChin struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_chin"`
			ContourLeft9 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_left9"`
			LeftEyeLowerRightQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_lower_right_quarter"`
			MouthLowerLipTop struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_lower_lip_top"`
			RightEyebrowUpperMiddle struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eyebrow_upper_middle"`
			RightEyebrowLeftCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eyebrow_left_corner"`
			RightEyeLowerRightQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_lower_right_quarter"`
			RightEyeBottom struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_bottom"`
			ContourLeft7 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_left7"`
			ContourLeft6 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_left6"`
			ContourLeft5 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_left5"`
			ContourLeft4 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_left4"`
			ContourLeft3 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_left3"`
			ContourLeft2 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_left2"`
			ContourLeft1 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_left1"`
			LeftEyeLowerLeftQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_lower_left_quarter"`
			ContourRight1 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_right1"`
			ContourRight3 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_right3"`
			ContourRight2 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_right2"`
			MouthLeftCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_left_corner"`
			ContourRight4 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_right4"`
			ContourRight7 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_right7"`
			LeftEyebrowLeftCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eyebrow_left_corner"`
			NoseRight struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_right"`
			NoseTip struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_tip"`
			ContourRight5 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_right5"`
			NoseContourLowerMiddle struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_contour_lower_middle"`
			RightEyeTop struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_top"`
			MouthLowerLipLeftContour3 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_lower_lip_left_contour3"`
			RightEyeRightCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_right_corner"`
			MouthUpperLipRightContour1 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_upper_lip_right_contour1"`
			MouthUpperLipRightContour2 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_upper_lip_right_contour2"`
			RightEyebrowLowerRightQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eyebrow_lower_right_quarter"`
			LeftEyeLeftCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_left_corner"`
			MouthRightCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_right_corner"`
			RightEyeLowerLeftQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_lower_left_quarter"`
			LeftEyebrowRightCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eyebrow_right_corner"`
			LeftEyebrowLowerRightQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eyebrow_lower_right_quarter"`
			RightEyeCenter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_center"`
			LeftEyePupil struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_pupil"`
			NoseLeft struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_left"`
			MouthLowerLipLeftContour1 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_lower_lip_left_contour1"`
			LeftEyeUpperRightQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_upper_right_quarter"`
			RightEyebrowLowerMiddle struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eyebrow_lower_middle"`
			LeftEyeCenter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_center"`
			ContourLeft8 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_left8"`
			ContourRight9 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_right9"`
			RightEyeLeftCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_left_corner"`
			LeftEyebrowUpperLeftQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eyebrow_upper_left_quarter"`
			LeftEyeBottom struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_bottom"`
			LeftEyeRightCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_right_corner"`
			RightEyebrowUpperLeftQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eyebrow_upper_left_quarter"`
			ContourRight8 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_right8"`
			RightEyebrowRightCorner struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eyebrow_right_corner"`
			RightEyeUpperLeftQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_upper_left_quarter"`
			LeftEyebrowUpperMiddle struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eyebrow_upper_middle"`
			RightEyebrowUpperRightQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eyebrow_upper_right_quarter"`
			NoseContourLeft1 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_contour_left1"`
			NoseContourLeft2 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_contour_left2"`
			NoseContourLeft3 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_contour_left3"`
			NoseContourRight1 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_contour_right1"`
			NoseContourRight2 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_contour_right2"`
			MouthLowerLipBottom struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_lower_lip_bottom"`
			ContourRight6 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"contour_right6"`
			NoseContourRight3 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"nose_contour_right3"`
			LeftEyeTop struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eye_top"`
			MouthUpperLipRightContour3 struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_upper_lip_right_contour3"`
			LeftEyebrowUpperRightQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"left_eyebrow_upper_right_quarter"`
			RightEyeUpperRightQuarter struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"right_eye_upper_right_quarter"`
			MouthUpperLipBottom struct {
				Y int `json:"y"`
				X int `json:"x"`
			} `json:"mouth_upper_lip_bottom"`
		} `json:"landmark"`
		Attributes struct {
			Emotion struct {
				Sadness   float64 `json:"sadness"`
				Neutral   float64 `json:"neutral"`
				Disgust   float64 `json:"disgust"`
				Anger     float64 `json:"anger"`
				Surprise  float64 `json:"surprise"`
				Fear      float64 `json:"fear"`
				Happiness float64 `json:"happiness"`
			} `json:"emotion"`
			Gender struct {
				Value string `json:"value"`
			} `json:"gender"`
			Beauty struct {
				Malescore   float64 `json:"male_score"`
				Femalescore float64 `json:"female_score"`
			} `json:"beauty"`
			Age struct {
				Value int `json:"value"`
			} `json:"age"`
			Eyestatus struct {
				LeftEyeStatus struct {
					NormalGlassEyeOpen  float64 `json:"normal_glass_eye_open"`
					NoGlassEyeClose     float64 `json:"no_glass_eye_close"`
					Occlusion           float64 `json:"occlusion"`
					NoGlassEyeOpen      float64 `json:"no_glass_eye_open"`
					NormalGlassEyeClose float64 `json:"normal_glass_eye_close"`
					DarkGlasses         float64 `json:"dark_glasses"`
				} `json:"left_eye_status"`
				RightEyeStatus struct {
					NormalGlassEyeOpen  float64 `json:"normal_glass_eye_open"`
					NoGlassEyeClose     float64 `json:"no_glass_eye_close"`
					Occlusion           float64 `json:"occlusion"`
					NoGlassEyeOpen      float64 `json:"no_glass_eye_open"`
					NormalGlassEyeClose float64 `json:"normal_glass_eye_close"`
					DarkGlasses         float64 `json:"dark_glasses"`
				} `json:"right_eye_status"`
			} `json:"eyestatus"`
			Glass struct {
				Value string `json:"value"`
			} `json:"glass"`
			Headpose struct {
				YawAngle   float64 `json:"yaw_angle"`
				PitchAngle float64 `json:"pitch_angle"`
				RollAngle  float64 `json:"roll_angle"`
			} `json:"headpose"`
			Blur struct {
				Blurness struct {
					Threshold float64 `json:"threshold"`
					Value     float64 `json:"value"`
				} `json:"blurness"`
				Motionblur struct {
					Threshold float64 `json:"threshold"`
					Value     float64 `json:"value"`
				} `json:"motionblur"`
				Gaussianblur struct {
					Threshold int     `json:"threshold"`
					Value     float64 `json:"value"`
				} `json:"gaussianblur"`
			} `json:"blur"`
			Smile struct {
				Threshold float64 `json:"threshold"`
				Value     float64 `json:"value"`
			} `json:"smile"`
			Facequality struct {
				Threshold float64 `json:"threshold"`
				Value     float64 `json:"value"`
			} `json:"facequality"`
			Ethnicity struct {
				Value string `json:"value"`
			} `json:"ethnicity"`
		} `json:"attributes"`
		FaceRectangle struct {
			Width  int `json:"width"`
			Top    int `json:"top"`
			Left   int `json:"left"`
			Height int `json:"height"`
		} `json:"face_rectangle"`
		FaceToken string `json:"face_token"`
	} `json:"faces"`
}

type IdentifyFace interface {
	DentifyFace(request IRequest, requesthead RequestHead, responseContentChan chan string, faceAutoerrchan chan bool)
}

//百度++
type BaiduDentifyFace struct {
}

func (baiduDentifyFace BaiduDentifyFace) DentifyFace(request IRequest, requesthead RequestHead, responseContentChan chan string, faceAutoerrchan chan bool) {
	imageRequest, ok := request.(ImageRequest)
	if !ok {
		faceAutoerrchan <- true
		return
	}
	basestring, err1 := core.GetImageUrlBase64(imageRequest.PicUrl)
	if err1 != nil {
		faceAutoerrchan <- true
		return
	}
	res, err := http.PostForm(core.WefacerConfig.ConfigMap["baidu_recognition_url"], url.Values{"access_token": {AutoGeneratedValue.AccessToken}, "image": {basestring}, "max_face_num": {"5"}, "face_fields": {"beauty,age,expression,faceshape,gender,glasses,landmark,race,qualities"}})
	if err != nil {
		log.Println(err.Error())
	}
	defer res.Body.Close()
	body, _ := ioutil.ReadAll(res.Body)
	var baiduAuto BaiduAutoGenerated
	errUnmarshal := json.Unmarshal(body, &baiduAuto)
	if errUnmarshal != nil {
		log.Println(errUnmarshal.Error())
	}
	responseContentChan <- baiduAuto.makeBaiduResponseContent()
}

func (baidufaceAuto BaiduAutoGenerated) makeBaiduResponseContent() string {
	var contentstr string
	for index, result := range baidufaceAuto.Result {
		index++
		contentstr += "第" + strconv.Itoa(index) + "人\n"
		contentstr += "年龄:" + strconv.Itoa(int(result.Age)) + "\n"
		contentstr += "人种:" + convert.Get_baidu_race(result.Race) + "\n"
		contentstr += "性别:" + convert.Baidu_gender_convert(result.Gender) + "\n"
		contentstr += "表情:" + convert.Baidu_expression_convert(result.Expression) + "\n"
		contentstr += "眼镜:" + convert.Baidu_glasses_convert(result.Glasses) + "\n"
		contentstr += "颜值:" + strconv.Itoa(int(result.Beauty)) + "\n"
	}
	return contentstr
}

//Face++
type FaceAddDentifyFace struct {
}

func (faceAddDentifyFace FaceAddDentifyFace) DentifyFace(request IRequest, requesthead RequestHead, responseContentChan chan string, faceAutoerrchan chan bool) {
	imageRequest, ok := request.(ImageRequest)
	if !ok {
		faceAutoerrchan <- true
		return
	}
	basestring, err1 := core.GetImageUrlBase64(imageRequest.PicUrl)
	if err1 != nil {
		faceAutoerrchan <- true
		return
	}
	res, err := http.PostForm(core.WefacerConfig.ConfigMap["faceadd_recognition_url"], url.Values{"api_key": {core.WefacerConfig.ConfigMap["faceadd_api_key"]}, "api_secret": {core.WefacerConfig.ConfigMap["faceadd_secret_secret_key"]}, "image_base64": {basestring}, "return_landmark": {"1"}, "return_attributes": {"gender,age,smiling,headpose,facequality,blur,eyestatus,emotion,ethnicity"}})
	if err != nil {
		log.Println(err.Error())
	}
	defer res.Body.Close()
	body, _ := ioutil.ReadAll(res.Body)
	var faceAddAutoGenerated FaceAddAutoGenerated
	errUnmarshal := json.Unmarshal(body, &faceAddAutoGenerated)
	if errUnmarshal != nil {
		log.Println(errUnmarshal.Error())
	}
	responseContentChan <- faceAddAutoGenerated.makeFaceAddResponseContent()
}

func (faceAddAutoGenerated FaceAddAutoGenerated) makeFaceAddResponseContent() string {
	var contentstr string
	for index, result := range faceAddAutoGenerated.Faces {
		index++
		contentstr += "第" + strconv.Itoa(index) + "人\n"
		contentstr += "年龄:" + strconv.Itoa(result.Attributes.Age.Value) + "\n"
		contentstr += "人种:" + convert.Get_faceadd_ethnicity(result.Attributes.Ethnicity.Value) + "\n"
		contentstr += "性别:" + convert.Get_faceadd_gender(result.Attributes.Gender.Value) + "\n"
		contentstr += "表情:" + convert.Get_faceadd_expression(result.Attributes.Emotion.Anger,
			result.Attributes.Emotion.Disgust,
			result.Attributes.Emotion.Fear,
			result.Attributes.Emotion.Happiness,
			result.Attributes.Emotion.Neutral,
			result.Attributes.Emotion.Sadness,
			result.Attributes.Emotion.Surprise) + "\n"
		contentstr += "眼镜:" + convert.Get_faceadd_eyestatus(result.Attributes.Eyestatus.LeftEyeStatus.NormalGlassEyeOpen,
			result.Attributes.Eyestatus.LeftEyeStatus.NoGlassEyeClose,
			result.Attributes.Eyestatus.LeftEyeStatus.Occlusion,
			result.Attributes.Eyestatus.LeftEyeStatus.NoGlassEyeOpen,
			result.Attributes.Eyestatus.LeftEyeStatus.NormalGlassEyeClose,
			result.Attributes.Eyestatus.LeftEyeStatus.DarkGlasses) + "\n"
		contentstr += "颜值评分:" + convert.Get_faceadd_beauty(result.Attributes.Gender.Value,
			result.Attributes.Beauty.Malescore,
			result.Attributes.Beauty.Femalescore) + "\n"
	}

	log.Println("face++ handle end ,value=" + contentstr)
	return contentstr
}

var FaceAutoStruct map[string]interface{}

func init() {
	FaceAutoStruct = make(map[string]interface{})
	FaceAutoStruct["baidu"] = BaiduDentifyFace{}
	FaceAutoStruct["face++"] = FaceAddDentifyFace{}
}
